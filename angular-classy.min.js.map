{"version":3,"file":"angular-classy.min.js","sources":["angular-classy.js"],"names":["classyVersion","availablePlugins","alreadyRegisteredModules","getActiveClassyPlugins","name","origModule","getNextRequires","module","angular","i","requires","length","pluginName","plugin","obj","replace","__classyDefaults","copy","options","pluginDo","methodName","params","callbacks","plugins","classy","activePlugins","__options","prototype","pluginKeys","Object","keys","classyOptions","isFunction","before","returnVal","apply","after","copyAndExtendDeep","dst","key","value","_i","_len","arguments","constructor","origModuleMethod","reqs","configFn","activeClassyPlugins","version","controller","classObj","classyController","classFns","init","this","preInit","controllers","controllerArray","cC","cCs","localInject","classConstructor","buildConstructor","buildOptions","classKeys","hasOwnProperty","option","optionName","shorthandOptions","optionNames","j","isObject","k","extend","klass","$inject","injectIndex","deps","__classDepNames","isArray","depName","pluginPromises","then","push","initClass","postInit","boundClass","bind","all","enabled","addToScope","addToClass","privatePrefix","keyName","hasPrivatePrefix","string","prefix","slice","dataProp","data","call","isString","getter","$parse","fnKey","fnValue","$scope","scopeShortcut","depNames","inject","pluginDepNames","concat","initBefore","preDeps","ignore","__indexOf","indexOf","item","l","methods","boundMethod","method","bindWatchToClass","_watchKeywords","normal","objectEquality","collection","isActive","watch","Error","watchFns","expression","fn","$watch","$watchCollection","convertToFunctionExpression","context","parse","watchKeywords","watchRegistered","watchType","watchFn","keywords","keyword","normalizedExpression","exp"],"mappings":"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","sourcesContent":[";(function() {\n/*\nAngular Classy 1.2.3\nDave Jeffery, @DaveJ\nLicense: MIT\n */\nvar classyVersion = '1.2.3';\n\n/* global angular */\nvar availablePlugins = {};\n\nvar alreadyRegisteredModules = {};\n\nvar getActiveClassyPlugins = function(name, origModule) {\n  // TODO: Write a test to ensure that this method gets called the correct amount of times\n\n  var getNextRequires = function(name) {\n    if (alreadyRegisteredModules[name]) {\n      var module = angular.module(name);\n\n      // for pluginName in module.requires\n      for (var i = 0; i < module.requires.length; i++) {\n        var pluginName = module.requires[i];\n        var plugin = availablePlugins[pluginName];\n        if (plugin) {\n          obj[pluginName] = plugin;\n          if (!plugin.name) {\n            plugin.name = pluginName.replace('classy.', '');\n          }\n          if (!origModule.__classyDefaults) {\n            origModule.__classyDefaults = {};\n          }\n          origModule.__classyDefaults[plugin.name] = angular.copy(plugin.options || {});\n        }\n        getNextRequires(pluginName);\n      }\n    }\n  };\n\n  var obj = {};\n  alreadyRegisteredModules[name] = true;\n  getNextRequires(name);\n  return obj;\n};\n\n\n/**\n* Runs a particular stage of the lifecycle for all plugins.\n* Also runs the `before` and `after` callbacks if specified.\n*/\nvar pluginDo = function(methodName, params, callbacks) {\n  // params = [klass, deps, module];\n\n  var plugins = params[2].classy.activePlugins;\n  var options = params[0].__options || params[0].prototype.__options;\n\n  // for plugin of plugins\n  var pluginKeys = Object.keys(plugins);\n  for (var i = 0; i < pluginKeys.length; i++) {\n    var plugin = plugins[pluginKeys[i]];\n    plugin.options = options[plugin.name] || {};\n    plugin.classyOptions = options;\n\n    if (callbacks && angular.isFunction(callbacks.before)) {\n      callbacks.before(plugin);\n    }\n\n    var returnVal;\n    if (plugin && methodName && angular.isFunction(plugin[methodName])) {\n      returnVal = plugin[methodName].apply(plugin, params);\n    }\n\n    if (callbacks && angular.isFunction(callbacks.after)) {\n      callbacks.after(plugin, returnVal);\n    }\n  }\n};\n\n\n/**\n* Utility method to take an object and extend it with other objects\n* It does this recursively (deep) on inner objects too.\n*/\nvar copyAndExtendDeep = function(dst) {\n  var key, obj, value, _i, _len;\n  for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n    obj = arguments[_i];\n    if (obj !== dst) {\n      for (key in obj) {\n        value = obj[key];\n        if (dst[key] && dst[key].constructor && dst[key].constructor === Object) {\n          copyAndExtendDeep(dst[key], value);\n        } else {\n          dst[key] = angular.copy(value);\n        }\n      }\n    }\n  }\n  return dst;\n};\n\nvar origModuleMethod = angular.module;\n\nangular.module = function(name, reqs, configFn) {\n  /*\n   * We have to monkey-patch the `angular.module` method to see if 'classy' has been specified\n   * as a requirement. We also need the module name to we can register our classy controllers.\n   * Unfortunately there doesn't seem to be a more pretty/pluggable way to this.\n   */\n\n  var module = origModuleMethod(name, reqs, configFn);\n\n  if (reqs) {\n    if (name === 'classy.core') {\n      availablePlugins[name] = {};\n    }\n\n    var activeClassyPlugins = getActiveClassyPlugins(name, module);\n    if (activeClassyPlugins['classy.core']) {\n      module.classy = {\n        version: classyVersion,\n        plugin: {\n          controller: function(plugin) { availablePlugins[name] = plugin; }\n        },\n        options: {\n          controller: {}\n        },\n        activePlugins: activeClassyPlugins,\n        controller: function(classObj) {\n            /*\n            * `classyController` contains only a set of proxy functions for `classFns`,\n            * this is because I suspect that performance is better this way.\n            * TODO: Test performance to see if this is the most performant way to do it.\n            */\n\n            // Pre-initialisation (before instance is created)\n            classFns.preInit(classyController, classObj, module);\n\n            function classyController() {\n              // Initialisation (after instance is created)\n              classFns.init(this, arguments, module);\n            }\n\n            return classyController;\n        },\n        /**\n         * Accepts an array of controllers and returns the module, e.g.:\n         * `module.classy.controllers([xxx, xxx]).config(xxx).run(xxx)`\n         * Requested in issue #29\n         */\n        controllers: function(controllerArray) {\n          // for classObj in controllerArray\n          for (var i = 0; i < controllerArray.length; i++) {\n            this.controller(controllerArray[i]);\n          }\n\n          return module;\n        }\n      };\n      module.cC = module.classy.controller;\n      module.cCs = module.classy.controllers;\n    }\n  }\n  return module;\n};\n\n\nvar classFns = {\n\n  localInject: ['$q'],\n\n  preInit: function(classConstructor, classObj, module) {\n    this.buildConstructor(classConstructor, classObj);\n    this.buildOptions(classConstructor, classObj, module);\n\n    pluginDo('preInitBefore', [classConstructor, classObj, module]);\n    pluginDo('preInit', [classConstructor, classObj, module]);\n    pluginDo('preInitAfter', [classConstructor, classObj, module]);\n  },\n\n  /**\n   * Add properties from class object onto the class constructor\n   */\n  buildConstructor: function(classConstructor, classObj) {\n    // for key of classObj\n    var classKeys = Object.keys(classObj);\n    for (var i = 0; i < classKeys.length; i++) {\n      var key = classKeys[i];\n      if (!classObj.hasOwnProperty(key)) continue;\n      classConstructor.prototype[key] = classObj[key];\n    }\n  },\n\n  /**\n   * Build options object for all classy plugins\n   */\n  buildOptions: function(classConstructor, classObj, module) {\n    var options = copyAndExtendDeep({}, module.__classyDefaults, module.classy.options.controller, classObj.__options);\n    var shorthandOptions = {};\n\n    // Collect shorthand options\n    var option, optionName;\n    var optionNames = Object.keys(options);\n    for (var j = 0; j < optionNames.length; j++) {\n      optionName = optionNames[j];\n      option = options[optionNames[j]];\n      if (!angular.isObject(option)) {\n        shorthandOptions[optionName] = option;\n      }\n    }\n\n    // Apply shorthand options to plugin options\n    if (Object.keys(shorthandOptions).length) {\n      for (var k = 0; k < optionNames.length; k++) {\n        optionName = optionNames[k];\n        option = options[optionNames[k]];\n        if (angular.isObject(option)) {\n          angular.extend(option, shorthandOptions);\n        }\n      }\n    }\n\n    classConstructor.prototype.__options = options;\n  },\n\n  init: function(klass, $inject, module) {\n    var injectIndex = 0;\n    var deps = {};\n\n    // for key in klass.constructor.__classDepNames\n    for (var i = 0; i < klass.constructor.__classDepNames.length; i++) {\n      var key = klass.constructor.__classDepNames[i];\n      deps[key] = $inject[injectIndex];\n      injectIndex++;\n    }\n    pluginDo(null, [klass, deps, module], {\n      before: function(plugin) {\n        if (angular.isArray(plugin.localInject)) {\n          // for depName in plugin.localInject\n          for (var j = 0; j < plugin.localInject.length; j++) {\n            var depName = plugin.localInject[j];\n            plugin[depName] = $inject[injectIndex];\n            injectIndex++;\n          }\n        }\n      }\n    });\n\n    pluginDo('initBefore', [klass, deps, module]);\n\n    var pluginPromises = [];\n    pluginDo('init', [klass, deps, module], {\n      after: function(plugin, returnVal) {\n        if (returnVal && returnVal.then) {\n          // Naively assume this is a promise\n          pluginPromises.push(returnVal);\n        }\n      }\n    });\n\n    var initClass = function() {\n      if (angular.isFunction(klass.init)) {\n        klass.init();\n      }\n      pluginDo('initAfter', [klass, deps, module]);\n      this.postInit(klass, deps, module);\n    };\n    var boundClass = angular.bind(this, initClass);\n    if (pluginPromises.length) {\n      // Injected dependency below is $q\n      $inject[injectIndex].all(pluginPromises).then(boundClass);\n    } else {\n      boundClass();\n    }\n  },\n  postInit: function(klass, deps, module) {\n    pluginDo('postInitBefore', [klass, deps, module]);\n    pluginDo('postInit', [klass, deps, module]);\n    pluginDo('postInitAfter', [klass, deps, module]);\n  }\n};\n\nangular.module('classy.core', []);\n\nangular.module('classy.bindData', ['classy.core']).classy.plugin.controller({\n  localInject: ['$parse'],\n  options: {\n    enabled: true,\n    addToScope: true,\n    addToClass: true,\n    privatePrefix: '_',\n    keyName: 'data'\n  },\n  hasPrivatePrefix: function(string) {\n    var prefix = this.options.privatePrefix;\n    if (!prefix) {\n      return false;\n    } else {\n      return string.slice(0, prefix.length) === prefix;\n    }\n  },\n  init: function(klass, deps, module) {\n    // Adds objects returned by or set to the `$scope`\n    var dataProp = klass.constructor.prototype[this.options.keyName];\n    if (this.options.enabled && dataProp) {\n      var data = angular.copy(dataProp);\n      if (angular.isFunction(data)) {\n        data = data.call(klass);\n      } else if (angular.isObject(data)) {\n        for (var key in data) {\n          var value = data[key];\n          if (angular.isString(value)) {\n            var getter = this.$parse(value);\n            data[key] = getter(klass);\n          } else {\n            data[key] = value;\n          }\n        }\n      }\n      for (var fnKey in data) {\n        var fnValue = data[fnKey];\n        if (this.options.addToClass) {\n          klass[fnKey] = fnValue;\n        }\n        if (this.options.addToScope && !this.hasPrivatePrefix(fnKey) && deps.$scope) {\n          deps.$scope[fnKey] = fnValue;\n        }\n      }\n    }\n  }\n});\n\nangular.module('classy.bindDependencies', ['classy.core']).classy.plugin.controller({\n  options: {\n    enabled: true,\n    scopeShortcut: '$'\n  },\n  preInit: function(classConstructor, classObj, module) {\n    var depNames = classObj.inject || [];\n    if (angular.isArray(depNames)) {\n      this.inject(classConstructor, depNames, module);\n    }\n  },\n  inject: function(classConstructor, depNames, module) {\n    var pluginDepNames = [];\n    for (var pluginName in module.classy.activePlugins) {\n      var plugin = module.classy.activePlugins[pluginName];\n      if (angular.isArray(plugin.localInject)) {\n        pluginDepNames = pluginDepNames.concat(plugin.localInject);\n      }\n    }\n    pluginDepNames = pluginDepNames.concat(classFns.localInject);\n    classConstructor.__classDepNames = angular.copy(depNames);\n    classConstructor.$inject = depNames.concat(pluginDepNames);\n  },\n  initBefore: function(klass, deps, module) {\n    if (this.options.enabled) {\n      var preDeps = klass.constructor.$inject;\n      for (var i = 0; i < preDeps.length; ++i) {\n        var key = preDeps[i];\n        klass[key] = deps[key];\n        if (key === '$scope' && this.options.scopeShortcut) {\n          klass[this.options.scopeShortcut] = klass[key];\n        }\n      }\n    }\n  }\n});\n\nangular.module('classy.bindMethods', ['classy.core']).classy.plugin.controller({\n  localInject: ['$parse'],\n  options: {\n    enabled: true,\n    addToScope: true,\n    addToClass: true,\n    privatePrefix: '_',\n    ignore: ['constructor', 'init'],\n    keyName: 'methods'\n  },\n  hasPrivatePrefix: function(string) {\n    var prefix;\n    prefix = this.options.privatePrefix;\n    if (!prefix) {\n      return false;\n    } else {\n      return string.slice(0, prefix.length) === prefix;\n    }\n  },\n  init: function(klass, deps, module) {\n    // indexOf shim for IE <= 8\n    var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n    if (this.options.enabled) {\n      var methods = klass.constructor.prototype[this.options.keyName];\n      for (var key in methods) {\n        var method = methods[key];\n\n        var boundMethod;\n        if (angular.isFunction(method) && !(__indexOf.call(this.options.ignore, key) >= 0)) {\n          boundMethod = angular.bind(klass, method);\n        } else if (angular.isString(method)) {\n          var getter = this.$parse(method);\n          boundMethod = function() {\n            return getter(klass);\n          };\n        }\n        if (angular.isFunction(boundMethod)) {\n          if (this.options.addToClass) {\n            klass[key] = boundMethod;\n          }\n          if (this.options.addToScope && !this.hasPrivatePrefix(key) && deps.$scope) {\n            deps.$scope[key] = boundMethod;\n          }\n        }\n      }\n    }\n  }\n});\n\nangular.module('classy.register', ['classy.core']).classy.plugin.controller({\n  options: {\n    enabled: true,\n    key: 'name'\n  },\n  preInit: function(classConstructor, classObj, module) {\n    if (this.options.enabled && angular.isString(classObj[this.options.key])) {\n      module.controller(classObj[this.options.key], classConstructor);\n    }\n  }\n});\n\nangular.module('classy.watch', ['classy.core']).classy.plugin.controller({\n  localInject: ['$parse'],\n  options: {\n    enabled: true,\n    bindWatchToClass: false,\n    _watchKeywords: {\n      normal: [],\n      objectEquality: ['{object}', '{deep}'],\n      collection: ['{collection}', '{shallow}']\n    }\n  },\n  isActive: function(klass, deps) {\n    if (this.options.enabled && angular.isObject(klass.watch)) {\n      if (!deps.$scope) {\n        throw new Error(\"You need to inject `$scope` to use the watch object\");\n        return false;\n      }\n      return true;\n    }\n  },\n  watchFns: {\n    normal: function(klass, expression, fn, deps) {\n      return deps.$scope.$watch(expression, angular.bind(klass, fn));\n    },\n    objectEquality: function(klass, expression, fn, deps) {\n      return deps.$scope.$watch(expression, angular.bind(klass, fn), true);\n    },\n    collection: function(klass, expression, fn, deps) {\n      return deps.$scope.$watchCollection(expression, angular.bind(klass, fn));\n    }\n  },\n  convertToFunctionExpression: function(expression, context) {\n    var parse = this.$parse;\n    return function() {\n      return parse(expression)(context);\n    };\n  },\n  postInit: function(klass, deps, module) {\n    if (!this.isActive(klass, deps)) {\n      return;\n    }\n    var watchKeywords = this.options._watchKeywords;\n\n    // for expression, fn of klass.watch\n    for (var expression in klass.watch) {\n      var fn = klass.watch[expression];\n      if (angular.isString(fn)) {\n        fn = klass[fn];\n      }\n      if (angular.isString(expression) && angular.isFunction(fn)) {\n        var watchRegistered = false;\n\n        // Search for keywords that identify it is a non-standard watch\n        // for watchType, watchFn of @watchFns\n        for (var watchType in this.watchFns) {\n          var watchFn = this.watchFns[watchType];\n          if (watchRegistered) {\n            break;\n          }\n          // for keyword in watchKeywords[watchType]\n          var keywords = watchKeywords[watchType];\n          for (var i = 0; i < keywords.length; i++) {\n            var keyword = keywords[i];\n\n            if (expression.indexOf(keyword) !== -1) {\n              var normalizedExpression = expression.replace(keyword, '');\n\n              var exp = this.options.bindWatchToClass ?\n                this.convertToFunctionExpression(normalizedExpression, klass) :\n                normalizedExpression;\n\n              watchFn(klass, exp, fn, deps);\n              watchRegistered = true;\n              break;\n            }\n          }\n        }\n        if (!watchRegistered) {\n          // If no keywords have been found then register it as a normal watch\n          var exp = this.options.bindWatchToClass ?\n            this.convertToFunctionExpression(expression, klass) :\n            expression;\n          this.watchFns.normal(klass, exp, fn, deps);\n        }\n      }\n    }\n  }\n});\n\nangular.module('classy', [\"classy.bindData\",\"classy.bindDependencies\",\"classy.bindMethods\",\"classy.core\",\"classy.register\",\"classy.watch\"]);\n})();"],"sourceRoot":"/source/"}